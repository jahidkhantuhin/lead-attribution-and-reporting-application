import {
  generateDataFromColumnsAndData,
  generateHeadersFromColumns,
} from './helpers'

export const PaymentReportColumns = () => {
  return [
    {
      width: '500px',
      upload: {
        value: (value: any) => value,
        styles: {
          width: '25px',
        },
      },
      text: 'Client',
      value: 'name',
    },
    {
      width: '80px',
      upload: {
        value: (value: any) => value,
        styles: {
          width: '8px',
        },
      },
      text: 'Calls',
      value: 'total_calls',
    },
    {
      width: '150px',
      upload: {
        value: (value: any) => value,
        styles: {
          width: '15px',
        },
      },
      text: 'Total Call Time',
      value: 'total_call_duration',
    },
    {
      width: '150px',
      upload: {
        value: (value: any) => value,
        styles: {
          width: '15px',
        },
      },
      text: 'Total Rating Time',
      value: 'total_rating_time',
    },
    {
      width: '120px',
      upload: {
        value: (value: any) => value,
        styles: {
          width: '10px',
        },
      },
      text: 'Pay rate',
      value: 'pay_rate',
    },
    {
      upload: {
        value: (value: any) => value,
        styles: {
          width: '10px',
        },
      },
      text: 'Total',
      value: 'total',
    },
  ]
}

const generatePaymentReport = function (computedReport: any, params: any) {
  const { scorer, filters, user } = params
  return {
    type: 'payment-report',
    name: `Payment Report, ${scorer.value.fullname}, ${filters.value.from}-${filters.value.to}, Generated by ${user.fullname}`,
    sheets: [
      {
        title: 'Payment Report',
        headings: generateHeadersFromColumns(PaymentReportColumns()),
        content: generateDataFromColumnsAndData({
          columns: PaymentReportColumns(),
          data: computedReport.value,
          rowStyle: (item: any) => {
            return {
              fontSize: '10px',
              color: item.name === 'Totals' ? '#f6f6f6' : '',
              width: '30px',
              textAlign: 'left',
              bgColor: item.name === 'Totals' ? '#727272' : '',
              fontWeight: item.name === 'Totals' ? 'bold' : '',
            }
          },
        }),
      },
    ],
  }
}

export default generatePaymentReport
